digraph ParseTree {
  node [shape=box];
  node0 [label="Source"];
  node1 [label="SourceItem"];
  node2 [label="FuncDef"];
  node3 [label="FuncSignature"];
  node4 [label="myFunction"];
  node3 -> node4;
  node5 [label="ListArgDefs"];
  node6 [label="Argument"];
  node7 [label="x"];
  node6 -> node7;
  node8 [label="TypeRef"];
  node9 [label="BuiltinType"];
  node10 [label="int"];
  node9 -> node10;
  node8 -> node9;
  node6 -> node8;
  node5 -> node6;
  node3 -> node5;
  node2 -> node3;
  node11 [label="BodySig"];
  node12 [label="BlockStatement"];
  node13 [label="DoStatement"];
  node14 [label="BlockStatement"];
  node15 [label="DoStatement"];
  node16 [label="BlockStatement"];
  node17 [label="IfStatement"];
  node18 [label="Expression"];
  node19 [label="=="];
  node20 [label="a"];
  node19 -> node20;
  node21 [label="b"];
  node19 -> node21;
  node18 -> node19;
  node17 -> node18;
  node22 [label="ExpressionStatement"];
  node23 [label="Expression"];
  node24 [label=":="];
  node25 [label="a"];
  node24 -> node25;
  node26 [label="b"];
  node24 -> node26;
  node23 -> node24;
  node22 -> node23;
  node17 -> node22;
  node27 [label="ExpressionStatement"];
  node28 [label="Expression"];
  node29 [label=":="];
  node30 [label="a"];
  node29 -> node30;
  node31 [label="b"];
  node29 -> node31;
  node28 -> node29;
  node27 -> node28;
  node17 -> node27;
  node16 -> node17;
  node15 -> node16;
  node32 [label="Expression"];
  node33 [label="!="];
  node34 [label="+"];
  node35 [label="a"];
  node34 -> node35;
  node36 [label="b"];
  node34 -> node36;
  node33 -> node34;
  node37 [label="0"];
  node33 -> node37;
  node32 -> node33;
  node15 -> node32;
  node14 -> node15;
  node38 [label="BreakStatement"];
  node14 -> node38;
  node13 -> node14;
  node39 [label="Expression"];
  node40 [label="&&"];
  node41 [label="x"];
  node40 -> node41;
  node42 [label="0"];
  node40 -> node42;
  node39 -> node40;
  node13 -> node39;
  node12 -> node13;
  node43 [label="ExpressionStatement"];
  node44 [label="Expression"];
  node45 [label="FunctionCall"];
  node46 [label="funkSum"];
  node45 -> node46;
  node47 [label="Args"];
  node48 [label="Expression"];
  node49 [label="var1"];
  node48 -> node49;
  node47 -> node48;
  node50 [label="Expression"];
  node51 [label="var2"];
  node50 -> node51;
  node47 -> node50;
  node45 -> node47;
  node44 -> node45;
  node43 -> node44;
  node12 -> node43;
  node11 -> node12;
  node2 -> node11;
  node1 -> node2;
  node0 -> node1;
}
