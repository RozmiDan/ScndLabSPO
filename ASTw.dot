digraph ParseTree {
  node [shape=box];
  node0 [label="Source"];
  node1 [label="SourceItem"];
  node2 [label="FuncDef"];
  node3 [label="FuncSignature"];
  node4 [label="myFunction"];
  node3 -> node4;
  node5 [label="ListArgDefs"];
  node6 [label="Argument"];
  node7 [label="x"];
  node6 -> node7;
  node8 [label="TypeRef"];
  node9 [label="BuiltinType"];
  node10 [label="int"];
  node9 -> node10;
  node8 -> node9;
  node6 -> node8;
  node5 -> node6;
  node11 [label="Argument"];
  node12 [label="flag2"];
  node11 -> node12;
  node13 [label="TypeRef"];
  node14 [label="CustomType"];
  node15 [label="MyType"];
  node14 -> node15;
  node13 -> node14;
  node11 -> node13;
  node5 -> node11;
  node16 [label="Argument"];
  node17 [label="VAL32"];
  node16 -> node17;
  node18 [label="TypeRef"];
  node19 [label="ArrayType"];
  node20 [label="BuiltinType"];
  node21 [label="string"];
  node20 -> node21;
  node19 -> node20;
  node22 [label="Elems"];
  node23 [label=","];
  node22 -> node23;
  node19 -> node22;
  node18 -> node19;
  node16 -> node18;
  node5 -> node16;
  node3 -> node5;
  node24 [label="TypeRef"];
  node25 [label="BuiltinType"];
  node26 [label="uint"];
  node25 -> node26;
  node24 -> node25;
  node3 -> node24;
  node2 -> node3;
  node27 [label="BodySig"];
  node28 [label="VarsDefenition"];
  node29 [label="ListIdentifier"];
  node30 [label="fst_val"];
  node29 -> node30;
  node31 [label="scnd_val"];
  node29 -> node31;
  node32 [label="thd_val"];
  node29 -> node32;
  node28 -> node29;
  node33 [label="BuiltinType"];
  node34 [label="long"];
  node33 -> node34;
  node28 -> node33;
  node27 -> node28;
  node35 [label="BlockStatement"];
  node36 [label="WhileStatement"];
  node37 [label="Expression"];
  node38 [label="<"];
  node39 [label="fst_val"];
  node38 -> node39;
  node40 [label="Braces"];
  node41 [label="Expression"];
  node42 [label="-"];
  node43 [label="scnd_val"];
  node42 -> node43;
  node44 [label="thd_val"];
  node42 -> node44;
  node41 -> node42;
  node40 -> node41;
  node38 -> node40;
  node37 -> node38;
  node36 -> node37;
  node45 [label="ExpressionStatement"];
  node46 [label="Expression"];
  node47 [label=":="];
  node48 [label="thd_val"];
  node47 -> node48;
  node49 [label="*"];
  node50 [label="23"];
  node49 -> node50;
  node51 [label="-"];
  node52 [label="2"];
  node51 -> node52;
  node49 -> node51;
  node47 -> node49;
  node46 -> node47;
  node45 -> node46;
  node36 -> node45;
  node35 -> node36;
  node53 [label="ExpressionStatement"];
  node54 [label="Expression"];
  node55 [label=":="];
  node56 [label="ArrayAccess"];
  node57 [label="myArray"];
  node56 -> node57;
  node58 [label="Indices"];
  node59 [label="Expression"];
  node60 [label="1"];
  node59 -> node60;
  node58 -> node59;
  node56 -> node58;
  node55 -> node56;
  node61 [label="+"];
  node62 [label="x"];
  node61 -> node62;
  node63 [label="5"];
  node61 -> node63;
  node55 -> node61;
  node54 -> node55;
  node53 -> node54;
  node35 -> node53;
  node64 [label="IfStatement"];
  node65 [label="Expression"];
  node66 [label="=="];
  node67 [label="%"];
  node68 [label="i"];
  node67 -> node68;
  node69 [label="2"];
  node67 -> node69;
  node66 -> node67;
  node70 [label="0"];
  node66 -> node70;
  node65 -> node66;
  node64 -> node65;
  node71 [label="BlockStatement"];
  node72 [label="ExpressionStatement"];
  node73 [label="Expression"];
  node74 [label=":="];
  node75 [label="x"];
  node74 -> node75;
  node76 [label="0b01001"];
  node74 -> node76;
  node73 -> node74;
  node72 -> node73;
  node71 -> node72;
  node77 [label="IfStatement"];
  node78 [label="Expression"];
  node79 [label="=="];
  node80 [label="x"];
  node79 -> node80;
  node81 [label="9"];
  node79 -> node81;
  node78 -> node79;
  node77 -> node78;
  node82 [label="ExpressionStatement"];
  node83 [label="Expression"];
  node84 [label=":="];
  node85 [label="y"];
  node84 -> node85;
  node86 [label="+"];
  node87 [label="x"];
  node86 -> node87;
  node88 [label="1"];
  node86 -> node88;
  node84 -> node86;
  node83 -> node84;
  node82 -> node83;
  node77 -> node82;
  node71 -> node77;
  node89 [label="DoStatement"];
  node90 [label="ExpressionStatement"];
  node91 [label="Expression"];
  node92 [label=":="];
  node93 [label="flag"];
  node92 -> node93;
  node94 [label="!"];
  node95 [label="flag"];
  node94 -> node95;
  node92 -> node94;
  node91 -> node92;
  node90 -> node91;
  node89 -> node90;
  node96 [label="Expression"];
  node97 [label="&&"];
  node98 [label="x"];
  node97 -> node98;
  node99 [label="0"];
  node97 -> node99;
  node96 -> node97;
  node89 -> node96;
  node71 -> node89;
  node64 -> node71;
  node35 -> node64;
  node27 -> node35;
  node2 -> node27;
  node1 -> node2;
  node0 -> node1;
}
